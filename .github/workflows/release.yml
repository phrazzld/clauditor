name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive_name: clauditor-linux-amd64.tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            archive_name: clauditor-macos-amd64.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive_name: clauditor-windows-amd64.zip

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.target }}

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create archive
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          7z a ${{ matrix.archive_name }} target/${{ matrix.target }}/release/clauditor.exe
        else
          tar -czvf ${{ matrix.archive_name }} -C target/${{ matrix.target }}/release clauditor
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ matrix.archive_name }}
        asset_name: ${{ matrix.archive_name }}
        asset_content_type: application/octet-stream
